import{s as m,p as k,u as h,_ as x,c as S,b as C,o as w,a as g,q as P,w as j,f as B,k as L,v as R,t as O}from"./main-Bwn9CEnY.js";const T={1:{id:1,name:"初始地图",description:"这是一个初始地图",bg_image:"/assets/map_1.png",width:576,height:1024,start_location_id:1,locations:{1:{id:1,name:"起始点",adjacent_locations:[2],position:{x:100,y:200},enemy:{1:{probability:.5,max_count:100}},npc:{forge:{level:1},shop:{items:[{id:"potion_001",price:100},{id:"potion_002",price:200},{id:"potion_003",price:400}]}}},2:{id:2,name:"森林入口",adjacent_locations:[1,3],position:{x:300,y:200},enemy:{1:{probability:.6,max_count:150},2:{probability:.3,max_count:80}}},3:{id:3,name:"森林深处",adjacent_locations:[2],position:{x:200,y:400},enemy:{2:{probability:.7,max_count:200}}}}}},A={max_hp:100,attack:10,defense:5,crit_rate:.05,crit_resist:.02,crit_damage:1.5,crit_damage_resist:.1,hit_rate:.95,dodge_rate:.05},$={goblin:{name:"哥布林",desc:"弱小的绿色生物，喜欢成群结队",combat_multipliers:{max_hp:1,attack:1,defense:1,crit_rate:1,crit_resist:1,crit_damage:1,crit_damage_resist:1,hit_rate:1,dodge_rate:1}},orc:{name:"兽人",desc:"强壮的种族，天生就具有强大的力量",combat_multipliers:{max_hp:1.5,attack:1.5,defense:1.5,crit_rate:1.2,crit_resist:1.2,crit_damage:1.2,crit_damage_resist:1.2,hit_rate:1.1,dodge_rate:1.1}}},H={1:{name:"哥布林",desc:"弱小的绿色生物，喜欢成群结队",raceId:"goblin",level:1,combat_multipliers:{max_hp:1,attack:1,defense:1,crit_rate:1,crit_resist:1,crit_damage:1,crit_damage_resist:1,hit_rate:1,dodge_rate:1},drop_materials:[{name:"rabbit_fur",probability:.8},{name:"wolf_fur",probability:.6}]},2:{name:"兽人战士",desc:"强壮的兽人战士，拥有强大的力量",raceId:"orc",level:3,combat_multipliers:{max_hp:1,attack:1,defense:1,crit_rate:1,crit_resist:1,crit_damage:1,crit_damage_resist:1,hit_rate:1,dodge_rate:1},drop_materials:[{name:"steel",probability:.5}]}},b={base_combat_stats:A,races:$,creatures:H},E=a=>{const t=b.base_combat_stats,r=b.creatures[a],n=r.raceId,i=b.races[n];if(!i)throw new Error(`Invalid race ID: ${n}`);const e=i.combat_multipliers;if(!r)throw new Error(`Invalid creature ID: ${a}`);const s=r.combat_multipliers,o=r.level||1;return{max_hp:Math.floor(t.max_hp*o*e.max_hp*s.max_hp),attack:Math.floor(t.attack*o*e.attack*s.attack),defense:Math.floor(t.defense*o*e.defense*s.defense),crit_rate:t.crit_rate*e.crit_rate*s.crit_rate,crit_resist:t.crit_resist*e.crit_resist*s.crit_resist,crit_damage:t.crit_damage*e.crit_damage*s.crit_damage,crit_damage_resist:t.crit_damage_resist*e.crit_damage_resist*s.crit_damage_resist,hit_rate:t.hit_rate*e.hit_rate*s.hit_rate,dodge_rate:t.dodge_rate*e.dodge_rate*s.dodge_rate}},X=()=>{const a=m.currentLocationId,t=T[m.currentMapId].locations[a];if(!t||!t.enemy)return Promise.reject(new Error("Invalid location or no enemy configuration"));const r=Object.entries(m.enemyStatus).filter(([e,s])=>s.locationId===a);if(r.length>=5)return Promise.resolve();if(!m.locationStatus[a]){const e={...m.locationStatus};e[a]={},Object.keys(t.enemy).forEach(s=>{e[a][s]={remainingCount:t.enemy[s].max_count}}),k({locationStatus:e})}const n=5-r.length,i=Object.entries(t.enemy).filter(([e,s])=>{var c;return(((c=m.locationStatus[a][e])==null?void 0:c.remainingCount)||0)>0});if(i.length===0)return Promise.resolve();for(let e=0;e<n;e++){const s=Math.floor(Math.random()*i.length),[o,c]=i[s];if(Math.random()<=c.probability){const u=`${o}_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,[p,y]=o.split("_"),l=E(p),_={...m.enemyStatus},f={...m.locationStatus};_[u]={...l,hp:l.max_hp,enemyId:o,locationId:a},f[a][o].remainingCount--,k({enemyStatus:_,locationStatus:f})}if(m.locationStatus[a][o].remainingCount<=0&&(i.splice(s,1),i.length===0))break}return Promise.resolve()};async function D(a,t){const r=[],n=t.drop_materials||[];for(const i of n)if(Math.random()<=i.probability){const e={...a};e.materials=[...e.materials,i.name],await h(e),r.push(i.name)}return r}const d={max_hp:12e7,attack:15e5,defense:8,crit_rate:.05,crit_resist:.02,crit_damage:1.5,crit_damage_resist:.1,hit_rate:.95,dodge_rate:.05},v={max_hp:1.2,attack:1.15,defense:1.1};async function I(){const a=m.player,t=a.level,r={max_hp:Math.floor(d.max_hp*Math.pow(v.max_hp,t-1)),attack:Math.floor(d.attack*Math.pow(v.attack,t-1)),defense:Math.floor(d.defense*Math.pow(v.defense,t-1)),crit_rate:d.crit_rate,crit_resist:d.crit_resist,crit_damage:d.crit_damage,crit_damage_resist:d.crit_damage_resist,hit_rate:d.hit_rate,dodge_rate:d.dodge_rate};return Object.values(a.equipment).forEach(n=>{n&&Object.keys(n.combat_info).forEach(i=>{r[i]+=n.combat_info[i]})}),await h({...a,combat_stats:r}),Promise.resolve()}async function M(a,t){const r=Math.random(),n=t.hit_rate*(1-a.combat_stats.dodge_rate);if(r<=n){const i=Math.random(),e=t.crit_rate*(1-a.combat_stats.crit_resist),s=i<=e;let o=t.attack-a.combat_stats.defense;if(o=Math.max(1,o),s){const p=t.crit_damage*(1-a.combat_stats.crit_damage_resist);o=Math.floor(o*p)}const c={...a};c.hp=Math.max(0,c.hp-o),await h(c);const u=c.hp>0;return u||await h({...c,hp:120,level:1,gold:0,materials:[],equipment:[]}),{hit:!0,damage:o,isCrit:s,isPlayerAlive:u}}return{hit:!1,damage:0,isCrit:!1,isPlayerAlive:!0}}async function Y(a){const t=m.player,r=t.unequipped.findIndex(s=>s.name===a);if(r===-1)return Promise.reject(new Error("装备不存在"));const n=t.unequipped[r],i=n.position;t.equipment[i]&&t.unequipped.push(t.equipment[i]);const e={...t};e.equipment[i]=n,e.unequipped=[...e.unequipped.slice(0,r),...e.unequipped.slice(r+1)],await h(e),await I()}async function Z(a){const t=m.player;t.combat_stats||await I();const r=m.enemyStatus[a];if(!r)return Promise.reject(new Error("Enemy not found"));const n=r.enemyId,i=b.creatures[n];if(!i)return Promise.reject(new Error("Enemy config not found"));const e=E(n),s=Math.random(),o=t.combat_stats.hit_rate*(1-e.dodge_rate);let c=null;if(s>o)return c=await M(t,e),{player:{hit:!1,damage:0,isCrit:!1},enemy:c};const u=Math.random(),p=t.combat_stats.crit_rate*(1-e.crit_resist),y=u<=p;let l=t.combat_stats.attack-e.defense;if(l=Math.max(1,l),y){const q=t.combat_stats.crit_damage*(1-e.crit_damage_resist);l=Math.floor(l*q)}const _={...m.enemyStatus};_[a].hp-=l;let f=[];return _[a].hp<=0&&(f=await D(t,i),delete _[a],await k({enemyStatus:_})),_[a]&&(c=await M(t,e)),{player:{hit:!0,damage:l,isCrit:y},enemy:c,drops:f}}const V={max_hp:"生命值上限",attack:"攻击力",defense:"防御力",crit_rate:"暴击率",crit_resist:"暴击抵抗",crit_damage:"暴击伤害",crit_damage_resist:"暴击伤害抗性",hit_rate:"命中率",dodge_rate:"闪避率"},F={common:{name:"普通的",multiplier:.5,chance:.4399},uncommon:{name:"优秀的",multiplier:1,chance:.3},rare:{name:"精良的",multiplier:3,chance:.159},epic:{name:"史诗的",multiplier:12,chance:.1},legendary:{name:"传说的",multiplier:60,chance:.001},mythic:{name:"神话的",multiplier:360,chance:1e-4}},G={weapon:{name:"武器",stats:["attack"],stat_multipliers:{attack:2,defense:.5}},body:{name:"护甲",stats:["defense"],stat_multipliers:{attack:.5,defense:1}},feet:{name:"靴子",stats:["defense"],stat_multipliers:{attack:1,defense:1}},head:{name:"头盔",stats:["defense"],stat_multipliers:{attack:.5,defense:1}}},tt={combat_stats:V,equipment_levels:F,equipment_position:G},N={__name:"Modal",props:{visible:{type:Boolean,default:!1}},emits:["update:visible"],setup(a,{emit:t}){const r=t,n=()=>{r("update:visible",!1)};return(i,e)=>a.visible?(w(),S("div",{key:0,class:"modal-overlay",onClick:n},[g("div",{class:"modal-content",onClick:e[0]||(e[0]=j(()=>{},["stop"]))},[P(i.$slots,"default",{},void 0)])])):C("",!0)}},U=x(N,[["__scopeId","data-v-b52e14f0"]]),W={class:"message-container"},z=["innerHTML"],J={key:0,class:"message-actions"},K={__name:"Message",props:{content:{type:String,required:!0},visible:{type:Boolean,default:!1},showButton:{type:Boolean,default:!1},buttonText:{type:String,default:"确定"}},emits:["update:visible","action"],setup(a,{emit:t}){const r=a,n=t,i=()=>{n("action"),n("update:visible",!1)},e=B({get:()=>r.visible,set:s=>n("update:visible",s)});return(s,o)=>(w(),L(U,{visible:e.value,"onUpdate:visible":o[0]||(o[0]=c=>e.value=c)},{default:R(()=>[g("div",W,[g("div",{class:"message-content",innerHTML:a.content},null,8,z),a.showButton?(w(),S("div",J,[g("button",{class:"action-button",onClick:i},O(a.buttonText),1)])):C("",!0)])]),_:1},8,["visible"]))}},et=x(K,[["__scopeId","data-v-32b9dc5b"]]);export{et as M,Z as a,Y as b,I as c,b as e,X as g,tt as i,T as m};
